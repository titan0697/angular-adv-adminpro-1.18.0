{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport { Usuario } from '../models/usuario.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst base_url = environment.base_url;\nexport let BusquedasService = /*#__PURE__*/(() => {\n  class BusquedasService {\n    constructor(http) {\n      this.http = http;\n    }\n    get token() {\n      return localStorage.getItem('token') || '';\n    }\n    get headers() {\n      return {\n        headers: {\n          'x-token': this.token\n        }\n      };\n    }\n    transformarUsuarios(resultados) {\n      return resultados.map(user => new Usuario(user.nombre, user.email, '', user.img, user.google, user.role, user.uid));\n    }\n    transformarHospitales(resultados) {\n      return resultados;\n    }\n    transformarMedicos(resultados) {\n      return resultados;\n    }\n    busquedaGlobal(termino) {\n      const url = `${base_url}/todo/${termino}`;\n      return this.http.get(url, this.headers);\n    }\n    buscar(tipo, termino) {\n      const url = `${base_url}/todo/coleccion/${tipo}/${termino}`;\n      return this.http.get(url, this.headers).pipe(map(resp => {\n        switch (tipo) {\n          case 'usuarios':\n            return this.transformarUsuarios(resp.resultados);\n          case 'hospitales':\n            return this.transformarHospitales(resp.resultados);\n          case 'medicos':\n            return this.transformarMedicos(resp.resultados);\n          default:\n            return [];\n        }\n      }));\n    }\n  }\n  BusquedasService.ɵfac = function BusquedasService_Factory(t) {\n    return new (t || BusquedasService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  BusquedasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BusquedasService,\n    factory: BusquedasService.ɵfac,\n    providedIn: 'root'\n  });\n  return BusquedasService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}