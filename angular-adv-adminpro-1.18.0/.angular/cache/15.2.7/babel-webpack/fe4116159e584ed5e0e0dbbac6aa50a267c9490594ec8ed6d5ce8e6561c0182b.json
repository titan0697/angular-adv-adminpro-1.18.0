{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let IncrementadorComponent = /*#__PURE__*/(() => {\n  class IncrementadorComponent {\n    constructor() {\n      this.progreso = 40;\n      this.btnClass = 'btn-primary';\n      this.valorSalida = new EventEmitter();\n    }\n    ngOnInit() {\n      this.btnClass = `btn ${this.btnClass}`;\n    }\n    cambiarValor(valor) {\n      if (this.progreso >= 100 && valor >= 0) {\n        this.valorSalida.emit(100);\n        return this.progreso = 100;\n      }\n      if (this.progreso <= 0 && valor < 0) {\n        this.valorSalida.emit(0);\n        return this.progreso = 0;\n      }\n      this.progreso = this.progreso + valor;\n      this.valorSalida.emit(this.progreso);\n    }\n    onChange(nuevoValor) {\n      if (nuevoValor >= 100) {\n        this.progreso = 100;\n      } else if (nuevoValor <= 0) {\n        this.progreso = 0;\n      } else {\n        this.progreso = nuevoValor;\n      }\n      this.valorSalida.emit(this.progreso);\n    }\n  }\n  IncrementadorComponent.ɵfac = function IncrementadorComponent_Factory(t) {\n    return new (t || IncrementadorComponent)();\n  };\n  IncrementadorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IncrementadorComponent,\n    selectors: [[\"app-incrementador\"]],\n    inputs: {\n      progreso: [\"valor\", \"progreso\"],\n      btnClass: \"btnClass\"\n    },\n    outputs: {\n      valorSalida: \"valor\"\n    },\n    decls: 8,\n    vars: 6,\n    consts: [[1, \"input-group\"], [1, \"input-group-btn\"], [\"type\", \"button\", 3, \"ngClass\", \"click\"], [1, \"fa\", \"fa-minus\"], [\"type\", \"number\", \"placeholder\", \"Progreso\", \"min\", \"0\", \"max\", \"100\", 1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [1, \"fa\", \"fa-plus\"]],\n    template: function IncrementadorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"span\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function IncrementadorComponent_Template_button_click_2_listener() {\n          return ctx.cambiarValor(-5);\n        });\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function IncrementadorComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.onChange($event);\n        })(\"ngModelChange\", function IncrementadorComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.progreso = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"span\", 1)(6, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function IncrementadorComponent_Template_button_click_6_listener() {\n          return ctx.cambiarValor(5);\n        });\n        i0.ɵɵelement(7, \"i\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.btnClass);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ctx.progreso > 100 || ctx.progreso < 0))(\"ngModel\", ctx.progreso);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.btnClass);\n      }\n    },\n    dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.MinValidator, i2.MaxValidator, i2.NgModel],\n    encapsulation: 2\n  });\n  return IncrementadorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}