{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/hospital.service\";\nimport * as i3 from \"../../../services/medico.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../pipes/imagen.pipe\";\nfunction MedicoComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"label\", 9);\n    i0.ɵɵtext(2, \"Foto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 10)(4, \"div\", 11);\n    i0.ɵɵelement(5, \"img\", 24);\n    i0.ɵɵpipe(6, \"imagen\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"src\", i0.ɵɵpipeBind2(6, 1, ctx_r0.medicoSeleccionado.img, \"medicos\"), i0.ɵɵsanitizeUrl);\n  }\n}\nfunction MedicoComponent_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const hospital_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", hospital_r3._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", hospital_r3.nombre, \" \");\n  }\n}\nfunction MedicoComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 2)(2, \"div\", 3)(3, \"h4\", 4);\n    i0.ɵɵtext(4, \"Hospital\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h6\", 5);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"img\", 27);\n    i0.ɵɵpipe(8, \"imagen\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.hospitalSeleccionado.nombre);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", i0.ɵɵpipeBind2(8, 2, ctx_r2.hospitalSeleccionado.img, \"hospitales\"), i0.ɵɵsanitizeUrl);\n  }\n}\nexport let MedicoComponent = /*#__PURE__*/(() => {\n  class MedicoComponent {\n    constructor(fb, hospitalService, medicoService, router, activatedRoute) {\n      this.fb = fb;\n      this.hospitalService = hospitalService;\n      this.medicoService = medicoService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.hospitales = [];\n    }\n    ngOnInit() {\n      this.activatedRoute.params.subscribe(({\n        id\n      }) => this.cargarMedico(id));\n      this.medicoForm = this.fb.group({\n        nombre: ['', Validators.required],\n        hospital: ['', Validators.required]\n      });\n      this.cargarHospitales();\n      this.medicoForm.get('hospital').valueChanges.subscribe(hospitalId => {\n        this.hospitalSeleccionado = this.hospitales.find(h => h._id === hospitalId);\n      });\n    }\n    cargarMedico(id) {\n      if (id === 'nuevo') {\n        return;\n      }\n      this.medicoService.obtenerMedicoPorId(id).pipe(delay(100)).subscribe(medico => {\n        if (!medico) {\n          return this.router.navigateByUrl(`/dashboard/medicos`);\n        }\n        const {\n          nombre,\n          hospital: {\n            _id\n          }\n        } = medico;\n        this.medicoSeleccionado = medico;\n        this.medicoForm.setValue({\n          nombre,\n          hospital: _id\n        });\n      });\n    }\n    cargarHospitales() {\n      this.hospitalService.cargarHospitales().subscribe(hospitales => {\n        this.hospitales = hospitales;\n      });\n    }\n    guardarMedico() {\n      const {\n        nombre\n      } = this.medicoForm.value;\n      if (this.medicoSeleccionado) {\n        // actualizar\n        const data = Object.assign(Object.assign({}, this.medicoForm.value), {\n          _id: this.medicoSeleccionado._id\n        });\n        this.medicoService.actualizarMedico(data).subscribe(resp => {\n          Swal.fire('Actualizado', `${nombre} actualizado correctamente`, 'success');\n        });\n      } else {\n        // crear\n        this.medicoService.crearMedico(this.medicoForm.value).subscribe(resp => {\n          Swal.fire('Creado', `${nombre} creado correctamente`, 'success');\n          this.router.navigateByUrl(`/dashboard/medico/${resp.medico._id}`);\n        });\n      }\n    }\n  }\n  MedicoComponent.ɵfac = function MedicoComponent_Factory(t) {\n    return new (t || MedicoComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HospitalService), i0.ɵɵdirectiveInject(i3.MedicoService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  MedicoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MedicoComponent,\n    selectors: [[\"app-medico\"]],\n    decls: 33,\n    vars: 5,\n    consts: [[1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-subtitle\"], [1, \"form-horizontal\", \"p-t-20\", 3, \"formGroup\", \"submit\"], [\"class\", \"form-group row\", 4, \"ngIf\"], [1, \"form-group\", \"row\"], [\"for\", \"exampleInputuname3\", 1, \"col-sm-3\", \"control-label\"], [1, \"col-sm-9\"], [1, \"input-group\"], [1, \"input-group-addon\"], [1, \"ti-user\"], [\"type\", \"text\", \"formControlName\", \"nombre\", \"id\", \"exampleInputuname3\", \"placeholder\", \"Nombre del m\\u00E9dico\", 1, \"form-control\"], [\"for\", \"exampleInputEmail3\", 1, \"col-sm-3\", \"control-label\"], [\"formControlName\", \"hospital\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", \"row\", \"m-b-0\"], [1, \"offset-sm-3\", \"col-sm-9\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"waves-effect\", \"waves-light\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"], [\"class\", \"col animated fadeIn fast\", 4, \"ngIf\"], [1, \"w200\", 3, \"src\"], [3, \"value\"], [1, \"col\", \"animated\", \"fadeIn\", \"fast\"], [1, \"img-thumbnail\", 3, \"src\"]],\n    template: function MedicoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h4\", 4);\n        i0.ɵɵtext(5, \"M\\u00E9dico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"h6\", 5);\n        i0.ɵɵtext(7, \"Actualizar informaci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 6);\n        i0.ɵɵlistener(\"submit\", function MedicoComponent_Template_form_submit_8_listener() {\n          return ctx.guardarMedico();\n        });\n        i0.ɵɵtemplate(9, MedicoComponent_div_9_Template, 7, 4, \"div\", 7);\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n        i0.ɵɵtext(12, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 11)(15, \"div\", 12);\n        i0.ɵɵelement(16, \"i\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 8)(19, \"label\", 15);\n        i0.ɵɵtext(20, \"Hospital\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 10)(22, \"div\", 11)(23, \"select\", 16)(24, \"option\", 17);\n        i0.ɵɵtext(25, \"Seleccione Hospital\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, MedicoComponent_option_26_Template, 2, 2, \"option\", 18);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(27, \"div\", 19)(28, \"div\", 20)(29, \"button\", 21);\n        i0.ɵɵelement(30, \"i\", 22);\n        i0.ɵɵtext(31, \" Guardar \");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵtemplate(32, MedicoComponent_div_32_Template, 9, 5, \"div\", 23);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.medicoForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.medicoSeleccionado);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.hospitales);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.medicoForm.invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.hospitalSeleccionado);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.ImagenPipe],\n    encapsulation: 2\n  });\n  return MedicoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}